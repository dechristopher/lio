// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: proto/ws.proto

package wsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlayerColor int32

const (
	PlayerColor_PLAYER_COLOR_UNSPECIFIED PlayerColor = 0
	PlayerColor_PLAYER_COLOR_WHITE       PlayerColor = 1
	PlayerColor_PLAYER_COLOR_BLACK       PlayerColor = 2
)

// Enum value maps for PlayerColor.
var (
	PlayerColor_name = map[int32]string{
		0: "PLAYER_COLOR_UNSPECIFIED",
		1: "PLAYER_COLOR_WHITE",
		2: "PLAYER_COLOR_BLACK",
	}
	PlayerColor_value = map[string]int32{
		"PLAYER_COLOR_UNSPECIFIED": 0,
		"PLAYER_COLOR_WHITE":       1,
		"PLAYER_COLOR_BLACK":       2,
	}
)

func (x PlayerColor) Enum() *PlayerColor {
	p := new(PlayerColor)
	*p = x
	return p
}

func (x PlayerColor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerColor) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_ws_proto_enumTypes[0].Descriptor()
}

func (PlayerColor) Type() protoreflect.EnumType {
	return &file_proto_ws_proto_enumTypes[0]
}

func (x PlayerColor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerColor.Descriptor instead.
func (PlayerColor) EnumDescriptor() ([]byte, []int) {
	return file_proto_ws_proto_rawDescGZIP(), []int{0}
}

type RoomState int32

const (
	RoomState_ROOM_STATE_UNSPECIFIED         RoomState = 0
	RoomState_ROOM_STATE_INIT                RoomState = 1
	RoomState_ROOM_STATE_WAITING_FOR_PLAYERS RoomState = 2
	RoomState_ROOM_STATE_GAME_READY          RoomState = 3
	RoomState_ROOM_STATE_GAME_ONGOING        RoomState = 4
	RoomState_ROOM_STATE_GAME_OVER           RoomState = 5
	RoomState_ROOM_STATE_ROOM_OVER           RoomState = 6
)

// Enum value maps for RoomState.
var (
	RoomState_name = map[int32]string{
		0: "ROOM_STATE_UNSPECIFIED",
		1: "ROOM_STATE_INIT",
		2: "ROOM_STATE_WAITING_FOR_PLAYERS",
		3: "ROOM_STATE_GAME_READY",
		4: "ROOM_STATE_GAME_ONGOING",
		5: "ROOM_STATE_GAME_OVER",
		6: "ROOM_STATE_ROOM_OVER",
	}
	RoomState_value = map[string]int32{
		"ROOM_STATE_UNSPECIFIED":         0,
		"ROOM_STATE_INIT":                1,
		"ROOM_STATE_WAITING_FOR_PLAYERS": 2,
		"ROOM_STATE_GAME_READY":          3,
		"ROOM_STATE_GAME_ONGOING":        4,
		"ROOM_STATE_GAME_OVER":           5,
		"ROOM_STATE_ROOM_OVER":           6,
	}
)

func (x RoomState) Enum() *RoomState {
	p := new(RoomState)
	*p = x
	return p
}

func (x RoomState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoomState) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_ws_proto_enumTypes[1].Descriptor()
}

func (RoomState) Type() protoreflect.EnumType {
	return &file_proto_ws_proto_enumTypes[1]
}

func (x RoomState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoomState.Descriptor instead.
func (RoomState) EnumDescriptor() ([]byte, []int) {
	return file_proto_ws_proto_rawDescGZIP(), []int{1}
}

type VariantGroup int32

const (
	VariantGroup_VARIANT_GROUP_UNSPECIFIED VariantGroup = 0
	VariantGroup_VARIANT_GROUP_BLITZ       VariantGroup = 1
	VariantGroup_VARIANT_GROUP_RAPID       VariantGroup = 2
	VariantGroup_VARIANT_GROUP_HYPER       VariantGroup = 3
	VariantGroup_VARIANT_GROUP_ULTI        VariantGroup = 4
	VariantGroup_VARIANT_GROUP_BULLET      VariantGroup = 5
)

// Enum value maps for VariantGroup.
var (
	VariantGroup_name = map[int32]string{
		0: "VARIANT_GROUP_UNSPECIFIED",
		1: "VARIANT_GROUP_BLITZ",
		2: "VARIANT_GROUP_RAPID",
		3: "VARIANT_GROUP_HYPER",
		4: "VARIANT_GROUP_ULTI",
		5: "VARIANT_GROUP_BULLET",
	}
	VariantGroup_value = map[string]int32{
		"VARIANT_GROUP_UNSPECIFIED": 0,
		"VARIANT_GROUP_BLITZ":       1,
		"VARIANT_GROUP_RAPID":       2,
		"VARIANT_GROUP_HYPER":       3,
		"VARIANT_GROUP_ULTI":        4,
		"VARIANT_GROUP_BULLET":      5,
	}
)

func (x VariantGroup) Enum() *VariantGroup {
	p := new(VariantGroup)
	*p = x
	return p
}

func (x VariantGroup) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VariantGroup) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_ws_proto_enumTypes[2].Descriptor()
}

func (VariantGroup) Type() protoreflect.EnumType {
	return &file_proto_ws_proto_enumTypes[2]
}

func (x VariantGroup) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VariantGroup.Descriptor instead.
func (VariantGroup) EnumDescriptor() ([]byte, []int) {
	return file_proto_ws_proto_rawDescGZIP(), []int{2}
}

type GameOutcome int32

const (
	GameOutcome_GAME_OUTCOME_UNSPECIFIED GameOutcome = 0
	GameOutcome_GAME_OUTCOME_DRAW        GameOutcome = 1
	GameOutcome_GAME_OUTCOME_BLACK_WINS  GameOutcome = 2
	GameOutcome_GAME_OUTCOME_WHITE_WINS  GameOutcome = 3
)

// Enum value maps for GameOutcome.
var (
	GameOutcome_name = map[int32]string{
		0: "GAME_OUTCOME_UNSPECIFIED",
		1: "GAME_OUTCOME_DRAW",
		2: "GAME_OUTCOME_BLACK_WINS",
		3: "GAME_OUTCOME_WHITE_WINS",
	}
	GameOutcome_value = map[string]int32{
		"GAME_OUTCOME_UNSPECIFIED": 0,
		"GAME_OUTCOME_DRAW":        1,
		"GAME_OUTCOME_BLACK_WINS":  2,
		"GAME_OUTCOME_WHITE_WINS":  3,
	}
)

func (x GameOutcome) Enum() *GameOutcome {
	p := new(GameOutcome)
	*p = x
	return p
}

func (x GameOutcome) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameOutcome) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_ws_proto_enumTypes[3].Descriptor()
}

func (GameOutcome) Type() protoreflect.EnumType {
	return &file_proto_ws_proto_enumTypes[3]
}

func (x GameOutcome) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameOutcome.Descriptor instead.
func (GameOutcome) EnumDescriptor() ([]byte, []int) {
	return file_proto_ws_proto_rawDescGZIP(), []int{3}
}

type TimeControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitialTime int64 `protobuf:"varint,1,opt,name=initial_time,json=initialTime,proto3" json:"initial_time,omitempty"` // time the clocks start at
	Increment   int64 `protobuf:"varint,2,opt,name=increment,proto3" json:"increment,omitempty"`                        // time gained after each move
	Delay       int64 `protobuf:"varint,3,opt,name=delay,proto3" json:"delay,omitempty"`                                // time before time starts to decrement
}

func (x *TimeControl) Reset() {
	*x = TimeControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ws_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeControl) ProtoMessage() {}

func (x *TimeControl) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeControl.ProtoReflect.Descriptor instead.
func (*TimeControl) Descriptor() ([]byte, []int) {
	return file_proto_ws_proto_rawDescGZIP(), []int{0}
}

func (x *TimeControl) GetInitialTime() int64 {
	if x != nil {
		return x.InitialTime
	}
	return 0
}

func (x *TimeControl) GetIncrement() int64 {
	if x != nil {
		return x.Increment
	}
	return 0
}

func (x *TimeControl) GetDelay() int64 {
	if x != nil {
		return x.Delay
	}
	return 0
}

type Variant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	HtmlName string       `protobuf:"bytes,2,opt,name=html_name,json=htmlName,proto3" json:"html_name,omitempty"`
	Group    VariantGroup `protobuf:"varint,3,opt,name=group,proto3,enum=ws.v1.VariantGroup" json:"group,omitempty"`
	Control  *TimeControl `protobuf:"bytes,4,opt,name=control,proto3" json:"control,omitempty"`
}

func (x *Variant) Reset() {
	*x = Variant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ws_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Variant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Variant) ProtoMessage() {}

func (x *Variant) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Variant.ProtoReflect.Descriptor instead.
func (*Variant) Descriptor() ([]byte, []int) {
	return file_proto_ws_proto_rawDescGZIP(), []int{1}
}

func (x *Variant) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Variant) GetHtmlName() string {
	if x != nil {
		return x.HtmlName
	}
	return ""
}

func (x *Variant) GetGroup() VariantGroup {
	if x != nil {
		return x.Group
	}
	return VariantGroup_VARIANT_GROUP_UNSPECIFIED
}

func (x *Variant) GetControl() *TimeControl {
	if x != nil {
		return x.Control
	}
	return nil
}

type Variants struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Variants []*Variant `protobuf:"bytes,1,rep,name=variants,proto3" json:"variants,omitempty"` // array of variants
}

func (x *Variants) Reset() {
	*x = Variants{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ws_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Variants) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Variants) ProtoMessage() {}

func (x *Variants) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Variants.ProtoReflect.Descriptor instead.
func (*Variants) Descriptor() ([]byte, []int) {
	return file_proto_ws_proto_rawDescGZIP(), []int{2}
}

func (x *Variants) GetVariants() []*Variant {
	if x != nil {
		return x.Variants
	}
	return nil
}

type VariantPools struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// we can't use enums for keys within a map but using an int provides a workaround
	Pools map[string]*Variants `protobuf:"bytes,1,rep,name=pools,proto3" json:"pools,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *VariantPools) Reset() {
	*x = VariantPools{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ws_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VariantPools) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VariantPools) ProtoMessage() {}

func (x *VariantPools) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VariantPools.ProtoReflect.Descriptor instead.
func (*VariantPools) Descriptor() ([]byte, []int) {
	return file_proto_ws_proto_rawDescGZIP(), []int{3}
}

func (x *VariantPools) GetPools() map[string]*Variants {
	if x != nil {
		return x.Pools
	}
	return nil
}

type NewCustomRoomPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VariantHtmlName string      `protobuf:"bytes,1,opt,name=variant_html_name,json=variantHtmlName,proto3" json:"variant_html_name,omitempty"`
	PlayerColor     PlayerColor `protobuf:"varint,2,opt,name=player_color,json=playerColor,proto3,enum=ws.v1.PlayerColor" json:"player_color,omitempty"`
}

func (x *NewCustomRoomPayload) Reset() {
	*x = NewCustomRoomPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ws_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewCustomRoomPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewCustomRoomPayload) ProtoMessage() {}

func (x *NewCustomRoomPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewCustomRoomPayload.ProtoReflect.Descriptor instead.
func (*NewCustomRoomPayload) Descriptor() ([]byte, []int) {
	return file_proto_ws_proto_rawDescGZIP(), []int{4}
}

func (x *NewCustomRoomPayload) GetVariantHtmlName() string {
	if x != nil {
		return x.VariantHtmlName
	}
	return ""
}

func (x *NewCustomRoomPayload) GetPlayerColor() PlayerColor {
	if x != nil {
		return x.PlayerColor
	}
	return PlayerColor_PLAYER_COLOR_UNSPECIFIED
}

type RoomPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId      string      `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	RoomState   RoomState   `protobuf:"varint,2,opt,name=room_state,json=roomState,proto3,enum=ws.v1.RoomState" json:"room_state,omitempty"`
	PlayerColor PlayerColor `protobuf:"varint,3,opt,name=player_color,json=playerColor,proto3,enum=ws.v1.PlayerColor" json:"player_color,omitempty"`
	IsCreator   bool        `protobuf:"varint,4,opt,name=is_creator,json=isCreator,proto3" json:"is_creator,omitempty"`
	Variant     *Variant    `protobuf:"bytes,5,opt,name=variant,proto3" json:"variant,omitempty"`
}

func (x *RoomPayload) Reset() {
	*x = RoomPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ws_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomPayload) ProtoMessage() {}

func (x *RoomPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomPayload.ProtoReflect.Descriptor instead.
func (*RoomPayload) Descriptor() ([]byte, []int) {
	return file_proto_ws_proto_rawDescGZIP(), []int{5}
}

func (x *RoomPayload) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RoomPayload) GetRoomState() RoomState {
	if x != nil {
		return x.RoomState
	}
	return RoomState_ROOM_STATE_UNSPECIFIED
}

func (x *RoomPayload) GetPlayerColor() PlayerColor {
	if x != nil {
		return x.PlayerColor
	}
	return PlayerColor_PLAYER_COLOR_UNSPECIFIED
}

func (x *RoomPayload) GetIsCreator() bool {
	if x != nil {
		return x.IsCreator
	}
	return false
}

func (x *RoomPayload) GetVariant() *Variant {
	if x != nil {
		return x.Variant
	}
	return nil
}

// PingPayload is used to determine socket latency to server
type PingPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingPayload) Reset() {
	*x = PingPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ws_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingPayload) ProtoMessage() {}

func (x *PingPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingPayload.ProtoReflect.Descriptor instead.
func (*PingPayload) Descriptor() ([]byte, []int) {
	return file_proto_ws_proto_rawDescGZIP(), []int{6}
}

// PongPayload is the response to the Ping message
type PongPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PongPayload) Reset() {
	*x = PongPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ws_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PongPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PongPayload) ProtoMessage() {}

func (x *PongPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PongPayload.ProtoReflect.Descriptor instead.
func (*PongPayload) Descriptor() ([]byte, []int) {
	return file_proto_ws_proto_rawDescGZIP(), []int{7}
}

// KeepAlivePayload maintains an open websocket connection with the server
type KeepAlivePayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *KeepAlivePayload) Reset() {
	*x = KeepAlivePayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ws_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeepAlivePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeepAlivePayload) ProtoMessage() {}

func (x *KeepAlivePayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeepAlivePayload.ProtoReflect.Descriptor instead.
func (*KeepAlivePayload) Descriptor() ([]byte, []int) {
	return file_proto_ws_proto_rawDescGZIP(), []int{8}
}

type Moves struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Moves []string `protobuf:"bytes,1,rep,name=moves,proto3" json:"moves,omitempty"` // array of game moves
}

func (x *Moves) Reset() {
	*x = Moves{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ws_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Moves) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Moves) ProtoMessage() {}

func (x *Moves) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Moves.ProtoReflect.Descriptor instead.
func (*Moves) Descriptor() ([]byte, []int) {
	return file_proto_ws_proto_rawDescGZIP(), []int{9}
}

func (x *Moves) GetMoves() []string {
	if x != nil {
		return x.Moves
	}
	return nil
}

type MovePayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clock         *ClockPayload     `protobuf:"bytes,1,opt,name=clock,proto3" json:"clock,omitempty"` // clock state
	Ofen          string            `protobuf:"bytes,2,opt,name=ofen,proto3" json:"ofen,omitempty"`   // (position, toMove)
	San           string            `protobuf:"bytes,3,opt,name=san,proto3" json:"san,omitempty"`
	Uoi           string            `protobuf:"bytes,4,opt,name=uoi,proto3" json:"uoi,omitempty"`
	Check         bool              `protobuf:"varint,5,opt,name=check,proto3" json:"check,omitempty"`                                                                                                                    // whether the player's king is in check
	Moves         *Moves            `protobuf:"bytes,6,opt,name=moves,proto3" json:"moves,omitempty"`                                                                                                                     // moves that have been played
	ValidMoves    map[string]*Moves `protobuf:"bytes,7,rep,name=valid_moves,json=validMoves,proto3" json:"valid_moves,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // moves the player can make
	BlackPlayerId string            `protobuf:"bytes,8,opt,name=black_player_id,json=blackPlayerId,proto3" json:"black_player_id,omitempty"`
	WhitePlayerId string            `protobuf:"bytes,9,opt,name=white_player_id,json=whitePlayerId,proto3" json:"white_player_id,omitempty"`
	Score         *ScorePayload     `protobuf:"bytes,10,opt,name=score,proto3" json:"score,omitempty"`                                                // player scores
	RoomState     RoomState         `protobuf:"varint,11,opt,name=room_state,json=roomState,proto3,enum=ws.v1.RoomState" json:"room_state,omitempty"` // enum depicting the state of the room
}

func (x *MovePayload) Reset() {
	*x = MovePayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ws_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovePayload) ProtoMessage() {}

func (x *MovePayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovePayload.ProtoReflect.Descriptor instead.
func (*MovePayload) Descriptor() ([]byte, []int) {
	return file_proto_ws_proto_rawDescGZIP(), []int{10}
}

func (x *MovePayload) GetClock() *ClockPayload {
	if x != nil {
		return x.Clock
	}
	return nil
}

func (x *MovePayload) GetOfen() string {
	if x != nil {
		return x.Ofen
	}
	return ""
}

func (x *MovePayload) GetSan() string {
	if x != nil {
		return x.San
	}
	return ""
}

func (x *MovePayload) GetUoi() string {
	if x != nil {
		return x.Uoi
	}
	return ""
}

func (x *MovePayload) GetCheck() bool {
	if x != nil {
		return x.Check
	}
	return false
}

func (x *MovePayload) GetMoves() *Moves {
	if x != nil {
		return x.Moves
	}
	return nil
}

func (x *MovePayload) GetValidMoves() map[string]*Moves {
	if x != nil {
		return x.ValidMoves
	}
	return nil
}

func (x *MovePayload) GetBlackPlayerId() string {
	if x != nil {
		return x.BlackPlayerId
	}
	return ""
}

func (x *MovePayload) GetWhitePlayerId() string {
	if x != nil {
		return x.WhitePlayerId
	}
	return ""
}

func (x *MovePayload) GetScore() *ScorePayload {
	if x != nil {
		return x.Score
	}
	return nil
}

func (x *MovePayload) GetRoomState() RoomState {
	if x != nil {
		return x.RoomState
	}
	return RoomState_ROOM_STATE_UNSPECIFIED
}

// GameStatePayload is an empty message new connections use to request board state
type GameStatePayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GameStatePayload) Reset() {
	*x = GameStatePayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ws_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameStatePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameStatePayload) ProtoMessage() {}

func (x *GameStatePayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameStatePayload.ProtoReflect.Descriptor instead.
func (*GameStatePayload) Descriptor() ([]byte, []int) {
	return file_proto_ws_proto_rawDescGZIP(), []int{11}
}

type CrowdPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connections int32 `protobuf:"varint,1,opt,name=connections,proto3" json:"connections,omitempty"` // the number of websocket connections within the room
}

func (x *CrowdPayload) Reset() {
	*x = CrowdPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ws_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrowdPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrowdPayload) ProtoMessage() {}

func (x *CrowdPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrowdPayload.ProtoReflect.Descriptor instead.
func (*CrowdPayload) Descriptor() ([]byte, []int) {
	return file_proto_ws_proto_rawDescGZIP(), []int{12}
}

func (x *CrowdPayload) GetConnections() int32 {
	if x != nil {
		return x.Connections
	}
	return 0
}

type ClockPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Black   int64    `protobuf:"varint,1,opt,name=black,proto3" json:"black,omitempty"`    // black clock in centi-seconds
	White   int64    `protobuf:"varint,2,opt,name=white,proto3" json:"white,omitempty"`    // white clock in centi-seconds
	Variant *Variant `protobuf:"bytes,3,opt,name=variant,proto3" json:"variant,omitempty"` // time variant the game is being played in
}

func (x *ClockPayload) Reset() {
	*x = ClockPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ws_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClockPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClockPayload) ProtoMessage() {}

func (x *ClockPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClockPayload.ProtoReflect.Descriptor instead.
func (*ClockPayload) Descriptor() ([]byte, []int) {
	return file_proto_ws_proto_rawDescGZIP(), []int{13}
}

func (x *ClockPayload) GetBlack() int64 {
	if x != nil {
		return x.Black
	}
	return 0
}

func (x *ClockPayload) GetWhite() int64 {
	if x != nil {
		return x.White
	}
	return 0
}

func (x *ClockPayload) GetVariant() *Variant {
	if x != nil {
		return x.Variant
	}
	return nil
}

type ScorePayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Black float32 `protobuf:"fixed32,1,opt,name=black,proto3" json:"black,omitempty"` // black player score
	White float32 `protobuf:"fixed32,2,opt,name=white,proto3" json:"white,omitempty"` // white player score
}

func (x *ScorePayload) Reset() {
	*x = ScorePayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ws_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScorePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScorePayload) ProtoMessage() {}

func (x *ScorePayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScorePayload.ProtoReflect.Descriptor instead.
func (*ScorePayload) Descriptor() ([]byte, []int) {
	return file_proto_ws_proto_rawDescGZIP(), []int{14}
}

func (x *ScorePayload) GetBlack() float32 {
	if x != nil {
		return x.Black
	}
	return 0
}

func (x *ScorePayload) GetWhite() float32 {
	if x != nil {
		return x.White
	}
	return 0
}

type GameOverPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameOutcome    GameOutcome   `protobuf:"varint,1,opt,name=game_outcome,json=gameOutcome,proto3,enum=ws.v1.GameOutcome" json:"game_outcome,omitempty"`
	OutcomeDetails string        `protobuf:"bytes,2,opt,name=outcome_details,json=outcomeDetails,proto3" json:"outcome_details,omitempty"` // details of the game-end event
	Score          *ScorePayload `protobuf:"bytes,3,opt,name=score,proto3" json:"score,omitempty"`                                         // player scores
	RoomOver       bool          `protobuf:"varint,4,opt,name=room_over,json=roomOver,proto3" json:"room_over,omitempty"`                  // whether the room has ended
}

func (x *GameOverPayload) Reset() {
	*x = GameOverPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ws_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameOverPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameOverPayload) ProtoMessage() {}

func (x *GameOverPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameOverPayload.ProtoReflect.Descriptor instead.
func (*GameOverPayload) Descriptor() ([]byte, []int) {
	return file_proto_ws_proto_rawDescGZIP(), []int{15}
}

func (x *GameOverPayload) GetGameOutcome() GameOutcome {
	if x != nil {
		return x.GameOutcome
	}
	return GameOutcome_GAME_OUTCOME_UNSPECIFIED
}

func (x *GameOverPayload) GetOutcomeDetails() string {
	if x != nil {
		return x.OutcomeDetails
	}
	return ""
}

func (x *GameOverPayload) GetScore() *ScorePayload {
	if x != nil {
		return x.Score
	}
	return nil
}

func (x *GameOverPayload) GetRoomOver() bool {
	if x != nil {
		return x.RoomOver
	}
	return false
}

type RedirectPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *RedirectPayload) Reset() {
	*x = RedirectPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ws_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedirectPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedirectPayload) ProtoMessage() {}

func (x *RedirectPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedirectPayload.ProtoReflect.Descriptor instead.
func (*RedirectPayload) Descriptor() ([]byte, []int) {
	return file_proto_ws_proto_rawDescGZIP(), []int{16}
}

func (x *RedirectPayload) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type RematchPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BothPlayersPresent bool `protobuf:"varint,1,opt,name=both_players_present,json=bothPlayersPresent,proto3" json:"both_players_present,omitempty"`
	WhiteRequested     bool `protobuf:"varint,2,opt,name=white_requested,json=whiteRequested,proto3" json:"white_requested,omitempty"`
	BlackRequested     bool `protobuf:"varint,3,opt,name=black_requested,json=blackRequested,proto3" json:"black_requested,omitempty"`
	RematchReady       bool `protobuf:"varint,4,opt,name=rematch_ready,json=rematchReady,proto3" json:"rematch_ready,omitempty"`
}

func (x *RematchPayload) Reset() {
	*x = RematchPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ws_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RematchPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RematchPayload) ProtoMessage() {}

func (x *RematchPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RematchPayload.ProtoReflect.Descriptor instead.
func (*RematchPayload) Descriptor() ([]byte, []int) {
	return file_proto_ws_proto_rawDescGZIP(), []int{17}
}

func (x *RematchPayload) GetBothPlayersPresent() bool {
	if x != nil {
		return x.BothPlayersPresent
	}
	return false
}

func (x *RematchPayload) GetWhiteRequested() bool {
	if x != nil {
		return x.WhiteRequested
	}
	return false
}

func (x *RematchPayload) GetBlackRequested() bool {
	if x != nil {
		return x.BlackRequested
	}
	return false
}

func (x *RematchPayload) GetRematchReady() bool {
	if x != nil {
		return x.RematchReady
	}
	return false
}

type WebsocketMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//
	//	*WebsocketMessage_PingPayload
	//	*WebsocketMessage_MovePayload
	//	*WebsocketMessage_GameOverPayload
	//	*WebsocketMessage_CrowdPayload
	//	*WebsocketMessage_RedirectPayload
	//	*WebsocketMessage_PongPayload
	//	*WebsocketMessage_KeepAlivePayload
	//	*WebsocketMessage_RematchPayload
	//	*WebsocketMessage_GameStatePayload
	Data isWebsocketMessage_Data `protobuf_oneof:"data"`
}

func (x *WebsocketMessage) Reset() {
	*x = WebsocketMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ws_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebsocketMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsocketMessage) ProtoMessage() {}

func (x *WebsocketMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsocketMessage.ProtoReflect.Descriptor instead.
func (*WebsocketMessage) Descriptor() ([]byte, []int) {
	return file_proto_ws_proto_rawDescGZIP(), []int{18}
}

func (m *WebsocketMessage) GetData() isWebsocketMessage_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *WebsocketMessage) GetPingPayload() *PingPayload {
	if x, ok := x.GetData().(*WebsocketMessage_PingPayload); ok {
		return x.PingPayload
	}
	return nil
}

func (x *WebsocketMessage) GetMovePayload() *MovePayload {
	if x, ok := x.GetData().(*WebsocketMessage_MovePayload); ok {
		return x.MovePayload
	}
	return nil
}

func (x *WebsocketMessage) GetGameOverPayload() *GameOverPayload {
	if x, ok := x.GetData().(*WebsocketMessage_GameOverPayload); ok {
		return x.GameOverPayload
	}
	return nil
}

func (x *WebsocketMessage) GetCrowdPayload() *CrowdPayload {
	if x, ok := x.GetData().(*WebsocketMessage_CrowdPayload); ok {
		return x.CrowdPayload
	}
	return nil
}

func (x *WebsocketMessage) GetRedirectPayload() *RedirectPayload {
	if x, ok := x.GetData().(*WebsocketMessage_RedirectPayload); ok {
		return x.RedirectPayload
	}
	return nil
}

func (x *WebsocketMessage) GetPongPayload() *PongPayload {
	if x, ok := x.GetData().(*WebsocketMessage_PongPayload); ok {
		return x.PongPayload
	}
	return nil
}

func (x *WebsocketMessage) GetKeepAlivePayload() *KeepAlivePayload {
	if x, ok := x.GetData().(*WebsocketMessage_KeepAlivePayload); ok {
		return x.KeepAlivePayload
	}
	return nil
}

func (x *WebsocketMessage) GetRematchPayload() *RematchPayload {
	if x, ok := x.GetData().(*WebsocketMessage_RematchPayload); ok {
		return x.RematchPayload
	}
	return nil
}

func (x *WebsocketMessage) GetGameStatePayload() *GameStatePayload {
	if x, ok := x.GetData().(*WebsocketMessage_GameStatePayload); ok {
		return x.GameStatePayload
	}
	return nil
}

type isWebsocketMessage_Data interface {
	isWebsocketMessage_Data()
}

type WebsocketMessage_PingPayload struct {
	PingPayload *PingPayload `protobuf:"bytes,1,opt,name=ping_payload,json=pingPayload,proto3,oneof"`
}

type WebsocketMessage_MovePayload struct {
	MovePayload *MovePayload `protobuf:"bytes,2,opt,name=move_payload,json=movePayload,proto3,oneof"`
}

type WebsocketMessage_GameOverPayload struct {
	GameOverPayload *GameOverPayload `protobuf:"bytes,3,opt,name=game_over_payload,json=gameOverPayload,proto3,oneof"`
}

type WebsocketMessage_CrowdPayload struct {
	CrowdPayload *CrowdPayload `protobuf:"bytes,4,opt,name=crowd_payload,json=crowdPayload,proto3,oneof"`
}

type WebsocketMessage_RedirectPayload struct {
	RedirectPayload *RedirectPayload `protobuf:"bytes,6,opt,name=redirect_payload,json=redirectPayload,proto3,oneof"`
}

type WebsocketMessage_PongPayload struct {
	PongPayload *PongPayload `protobuf:"bytes,7,opt,name=pong_payload,json=pongPayload,proto3,oneof"`
}

type WebsocketMessage_KeepAlivePayload struct {
	KeepAlivePayload *KeepAlivePayload `protobuf:"bytes,8,opt,name=keep_alive_payload,json=keepAlivePayload,proto3,oneof"`
}

type WebsocketMessage_RematchPayload struct {
	RematchPayload *RematchPayload `protobuf:"bytes,9,opt,name=rematch_payload,json=rematchPayload,proto3,oneof"`
}

type WebsocketMessage_GameStatePayload struct {
	GameStatePayload *GameStatePayload `protobuf:"bytes,10,opt,name=game_state_payload,json=gameStatePayload,proto3,oneof"`
}

func (*WebsocketMessage_PingPayload) isWebsocketMessage_Data() {}

func (*WebsocketMessage_MovePayload) isWebsocketMessage_Data() {}

func (*WebsocketMessage_GameOverPayload) isWebsocketMessage_Data() {}

func (*WebsocketMessage_CrowdPayload) isWebsocketMessage_Data() {}

func (*WebsocketMessage_RedirectPayload) isWebsocketMessage_Data() {}

func (*WebsocketMessage_PongPayload) isWebsocketMessage_Data() {}

func (*WebsocketMessage_KeepAlivePayload) isWebsocketMessage_Data() {}

func (*WebsocketMessage_RematchPayload) isWebsocketMessage_Data() {}

func (*WebsocketMessage_GameStatePayload) isWebsocketMessage_Data() {}

var File_proto_ws_proto protoreflect.FileDescriptor

var file_proto_ws_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x77, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x05, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x22, 0x64, 0x0a, 0x0b, 0x54, 0x69, 0x6d, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x63,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x6e,
	0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x22, 0x93, 0x01,
	0x0a, 0x07, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x68, 0x74, 0x6d, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x68, 0x74, 0x6d, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x77, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x22, 0x36, 0x0a, 0x08, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x12,
	0x2a, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x74, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x0c,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x34, 0x0a, 0x05,
	0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x77, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x73,
	0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x70, 0x6f, 0x6f,
	0x6c, 0x73, 0x1a, 0x49, 0x0a, 0x0a, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x74, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x79, 0x0a,
	0x14, 0x4e, 0x65, 0x77, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74,
	0x5f, 0x68, 0x74, 0x6d, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x48, 0x74, 0x6d, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x35, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x0b, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0xd7, 0x01, 0x0a, 0x0b, 0x52, 0x6f, 0x6f,
	0x6d, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x64, 0x12, 0x2f, 0x0a, 0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f,
	0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x77, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x0b, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x07, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x77, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x22, 0x0d, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x22, 0x0d, 0x0a, 0x0b, 0x50, 0x6f, 0x6e, 0x67, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x22, 0x12, 0x0a, 0x10, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x22, 0x1d, 0x0a, 0x05, 0x4d, 0x6f, 0x76, 0x65, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x6d, 0x6f, 0x76, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f,
	0x76, 0x65, 0x73, 0x22, 0xe8, 0x03, 0x0a, 0x0b, 0x4d, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x29, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x63, 0x6b,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x12,
	0x0a, 0x04, 0x6f, 0x66, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x66,
	0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x73, 0x61, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x6f, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x6f, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x22, 0x0a, 0x05,
	0x6d, 0x6f, 0x76, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x77, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x73, 0x52, 0x05, 0x6d, 0x6f, 0x76, 0x65, 0x73,
	0x12, 0x43, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x6d, 0x6f, 0x76, 0x65, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f,
	0x76, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x4d,
	0x6f, 0x76, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x4d, 0x6f, 0x76, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x62, 0x6c, 0x61, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x68, 0x69, 0x74, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x12, 0x2f, 0x0a, 0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x1a, 0x4b, 0x0a, 0x0f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x4d, 0x6f, 0x76, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f,
	0x76, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x12,
	0x0a, 0x10, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x22, 0x30, 0x0a, 0x0c, 0x43, 0x72, 0x6f, 0x77, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x64, 0x0a, 0x0c, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x68,
	0x69, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x77, 0x68, 0x69, 0x74, 0x65,
	0x12, 0x28, 0x0a, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x74, 0x52, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x22, 0x3a, 0x0a, 0x0c, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6c,
	0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x62, 0x6c, 0x61, 0x63, 0x6b,
	0x12, 0x14, 0x0a, 0x05, 0x77, 0x68, 0x69, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x05, 0x77, 0x68, 0x69, 0x74, 0x65, 0x22, 0xb9, 0x01, 0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x4f,
	0x76, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x35, 0x0a, 0x0c, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x12, 0x2e, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x75, 0x74,
	0x63, 0x6f, 0x6d, 0x65, 0x52, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x75, 0x74, 0x63,
	0x6f, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x77, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6f, 0x76,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x4f, 0x76,
	0x65, 0x72, 0x22, 0x2d, 0x0a, 0x0f, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xb9, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x62, 0x6f, 0x74, 0x68, 0x5f, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x12, 0x62, 0x6f, 0x74, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x50,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12,
	0x27, 0x0a, 0x0f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x72, 0x65, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x61, 0x64, 0x79, 0x22, 0xe0, 0x04,
	0x0a, 0x10, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x0b,
	0x70, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x37, 0x0a, 0x0c, 0x6d,
	0x6f, 0x76, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x44, 0x0a, 0x11, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6f, 0x76, 0x65,
	0x72, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x4f,
	0x76, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x3a, 0x0a, 0x0d, 0x63, 0x72,
	0x6f, 0x77, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x6f, 0x77, 0x64, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x72, 0x6f, 0x77, 0x64, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x43, 0x0a, 0x10, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x37, 0x0a, 0x0c, 0x70,
	0x6f, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6e, 0x67, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x6f, 0x6e, 0x67, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x47, 0x0a, 0x12, 0x6b, 0x65, 0x65, 0x70, 0x5f, 0x61, 0x6c, 0x69,
	0x76, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69,
	0x76, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x10, 0x6b, 0x65, 0x65,
	0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x40, 0x0a,
	0x0f, 0x72, 0x65, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52,
	0x0e, 0x72, 0x65, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x47, 0x0a, 0x12, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x77, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x2a, 0x5b, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12,
	0x1c, 0x0a, 0x18, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a,
	0x12, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x57, 0x48,
	0x49, 0x54, 0x45, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f,
	0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x10, 0x02, 0x2a, 0xcc, 0x01,
	0x0a, 0x09, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x52,
	0x4f, 0x4f, 0x4d, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x4f, 0x4f, 0x4d, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e,
	0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x49,
	0x4e, 0x47, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x53, 0x10, 0x02,
	0x12, 0x19, 0x0a, 0x15, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x47,
	0x41, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17, 0x52,
	0x4f, 0x4f, 0x4d, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x4f,
	0x4e, 0x47, 0x4f, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x4f, 0x4f, 0x4d,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x4f, 0x56, 0x45, 0x52,
	0x10, 0x05, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x4f, 0x56, 0x45, 0x52, 0x10, 0x06, 0x2a, 0xaa, 0x01, 0x0a,
	0x0c, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1d, 0x0a,
	0x19, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x54, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13,
	0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x54, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x42, 0x4c,
	0x49, 0x54, 0x5a, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x54,
	0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x52, 0x41, 0x50, 0x49, 0x44, 0x10, 0x02, 0x12, 0x17,
	0x0a, 0x13, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x54, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f,
	0x48, 0x59, 0x50, 0x45, 0x52, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x56, 0x41, 0x52, 0x49, 0x41,
	0x4e, 0x54, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x55, 0x4c, 0x54, 0x49, 0x10, 0x04, 0x12,
	0x18, 0x0a, 0x14, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x54, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50,
	0x5f, 0x42, 0x55, 0x4c, 0x4c, 0x45, 0x54, 0x10, 0x05, 0x2a, 0x7c, 0x0a, 0x0b, 0x47, 0x61, 0x6d,
	0x65, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x47, 0x41, 0x4d, 0x45,
	0x5f, 0x4f, 0x55, 0x54, 0x43, 0x4f, 0x4d, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x4f,
	0x55, 0x54, 0x43, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x52, 0x41, 0x57, 0x10, 0x01, 0x12, 0x1b, 0x0a,
	0x17, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x4f, 0x55, 0x54, 0x43, 0x4f, 0x4d, 0x45, 0x5f, 0x42, 0x4c,
	0x41, 0x43, 0x4b, 0x5f, 0x57, 0x49, 0x4e, 0x53, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x47, 0x41,
	0x4d, 0x45, 0x5f, 0x4f, 0x55, 0x54, 0x43, 0x4f, 0x4d, 0x45, 0x5f, 0x57, 0x48, 0x49, 0x54, 0x45,
	0x5f, 0x57, 0x49, 0x4e, 0x53, 0x10, 0x03, 0x42, 0x7c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x2e, 0x77,
	0x73, 0x2e, 0x76, 0x31, 0x42, 0x07, 0x57, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x65, 0x63, 0x68,
	0x72, 0x69, 0x73, 0x74, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x2f, 0x6c, 0x69, 0x6f, 0x2f, 0x73, 0x72,
	0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x77, 0x73,
	0x76, 0x31, 0xa2, 0x02, 0x03, 0x57, 0x58, 0x58, 0xaa, 0x02, 0x05, 0x57, 0x73, 0x2e, 0x56, 0x31,
	0xca, 0x02, 0x05, 0x57, 0x73, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x11, 0x57, 0x73, 0x5c, 0x56, 0x31,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x06, 0x57,
	0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_ws_proto_rawDescOnce sync.Once
	file_proto_ws_proto_rawDescData = file_proto_ws_proto_rawDesc
)

func file_proto_ws_proto_rawDescGZIP() []byte {
	file_proto_ws_proto_rawDescOnce.Do(func() {
		file_proto_ws_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_ws_proto_rawDescData)
	})
	return file_proto_ws_proto_rawDescData
}

var file_proto_ws_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proto_ws_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_proto_ws_proto_goTypes = []interface{}{
	(PlayerColor)(0),             // 0: ws.v1.PlayerColor
	(RoomState)(0),               // 1: ws.v1.RoomState
	(VariantGroup)(0),            // 2: ws.v1.VariantGroup
	(GameOutcome)(0),             // 3: ws.v1.GameOutcome
	(*TimeControl)(nil),          // 4: ws.v1.TimeControl
	(*Variant)(nil),              // 5: ws.v1.Variant
	(*Variants)(nil),             // 6: ws.v1.Variants
	(*VariantPools)(nil),         // 7: ws.v1.VariantPools
	(*NewCustomRoomPayload)(nil), // 8: ws.v1.NewCustomRoomPayload
	(*RoomPayload)(nil),          // 9: ws.v1.RoomPayload
	(*PingPayload)(nil),          // 10: ws.v1.PingPayload
	(*PongPayload)(nil),          // 11: ws.v1.PongPayload
	(*KeepAlivePayload)(nil),     // 12: ws.v1.KeepAlivePayload
	(*Moves)(nil),                // 13: ws.v1.Moves
	(*MovePayload)(nil),          // 14: ws.v1.MovePayload
	(*GameStatePayload)(nil),     // 15: ws.v1.GameStatePayload
	(*CrowdPayload)(nil),         // 16: ws.v1.CrowdPayload
	(*ClockPayload)(nil),         // 17: ws.v1.ClockPayload
	(*ScorePayload)(nil),         // 18: ws.v1.ScorePayload
	(*GameOverPayload)(nil),      // 19: ws.v1.GameOverPayload
	(*RedirectPayload)(nil),      // 20: ws.v1.RedirectPayload
	(*RematchPayload)(nil),       // 21: ws.v1.RematchPayload
	(*WebsocketMessage)(nil),     // 22: ws.v1.WebsocketMessage
	nil,                          // 23: ws.v1.VariantPools.PoolsEntry
	nil,                          // 24: ws.v1.MovePayload.ValidMovesEntry
}
var file_proto_ws_proto_depIdxs = []int32{
	2,  // 0: ws.v1.Variant.group:type_name -> ws.v1.VariantGroup
	4,  // 1: ws.v1.Variant.control:type_name -> ws.v1.TimeControl
	5,  // 2: ws.v1.Variants.variants:type_name -> ws.v1.Variant
	23, // 3: ws.v1.VariantPools.pools:type_name -> ws.v1.VariantPools.PoolsEntry
	0,  // 4: ws.v1.NewCustomRoomPayload.player_color:type_name -> ws.v1.PlayerColor
	1,  // 5: ws.v1.RoomPayload.room_state:type_name -> ws.v1.RoomState
	0,  // 6: ws.v1.RoomPayload.player_color:type_name -> ws.v1.PlayerColor
	5,  // 7: ws.v1.RoomPayload.variant:type_name -> ws.v1.Variant
	17, // 8: ws.v1.MovePayload.clock:type_name -> ws.v1.ClockPayload
	13, // 9: ws.v1.MovePayload.moves:type_name -> ws.v1.Moves
	24, // 10: ws.v1.MovePayload.valid_moves:type_name -> ws.v1.MovePayload.ValidMovesEntry
	18, // 11: ws.v1.MovePayload.score:type_name -> ws.v1.ScorePayload
	1,  // 12: ws.v1.MovePayload.room_state:type_name -> ws.v1.RoomState
	5,  // 13: ws.v1.ClockPayload.variant:type_name -> ws.v1.Variant
	3,  // 14: ws.v1.GameOverPayload.game_outcome:type_name -> ws.v1.GameOutcome
	18, // 15: ws.v1.GameOverPayload.score:type_name -> ws.v1.ScorePayload
	10, // 16: ws.v1.WebsocketMessage.ping_payload:type_name -> ws.v1.PingPayload
	14, // 17: ws.v1.WebsocketMessage.move_payload:type_name -> ws.v1.MovePayload
	19, // 18: ws.v1.WebsocketMessage.game_over_payload:type_name -> ws.v1.GameOverPayload
	16, // 19: ws.v1.WebsocketMessage.crowd_payload:type_name -> ws.v1.CrowdPayload
	20, // 20: ws.v1.WebsocketMessage.redirect_payload:type_name -> ws.v1.RedirectPayload
	11, // 21: ws.v1.WebsocketMessage.pong_payload:type_name -> ws.v1.PongPayload
	12, // 22: ws.v1.WebsocketMessage.keep_alive_payload:type_name -> ws.v1.KeepAlivePayload
	21, // 23: ws.v1.WebsocketMessage.rematch_payload:type_name -> ws.v1.RematchPayload
	15, // 24: ws.v1.WebsocketMessage.game_state_payload:type_name -> ws.v1.GameStatePayload
	6,  // 25: ws.v1.VariantPools.PoolsEntry.value:type_name -> ws.v1.Variants
	13, // 26: ws.v1.MovePayload.ValidMovesEntry.value:type_name -> ws.v1.Moves
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_proto_ws_proto_init() }
func file_proto_ws_proto_init() {
	if File_proto_ws_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_ws_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ws_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Variant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ws_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Variants); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ws_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VariantPools); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ws_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewCustomRoomPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ws_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ws_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ws_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PongPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ws_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeepAlivePayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ws_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Moves); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ws_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovePayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ws_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameStatePayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ws_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrowdPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ws_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClockPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ws_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScorePayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ws_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameOverPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ws_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedirectPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ws_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RematchPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ws_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebsocketMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_ws_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*WebsocketMessage_PingPayload)(nil),
		(*WebsocketMessage_MovePayload)(nil),
		(*WebsocketMessage_GameOverPayload)(nil),
		(*WebsocketMessage_CrowdPayload)(nil),
		(*WebsocketMessage_RedirectPayload)(nil),
		(*WebsocketMessage_PongPayload)(nil),
		(*WebsocketMessage_KeepAlivePayload)(nil),
		(*WebsocketMessage_RematchPayload)(nil),
		(*WebsocketMessage_GameStatePayload)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_ws_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_ws_proto_goTypes,
		DependencyIndexes: file_proto_ws_proto_depIdxs,
		EnumInfos:         file_proto_ws_proto_enumTypes,
		MessageInfos:      file_proto_ws_proto_msgTypes,
	}.Build()
	File_proto_ws_proto = out.File
	file_proto_ws_proto_rawDesc = nil
	file_proto_ws_proto_goTypes = nil
	file_proto_ws_proto_depIdxs = nil
}
